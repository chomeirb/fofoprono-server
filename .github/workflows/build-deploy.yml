name: Build the image and deploy to server

on:
  push:
    branches: [dev]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  pull-and-deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Copy docker-compose.yml to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: ./docker-compose.yml
        target: /srv/fofoprono/server

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Pull image and deploy to server
      uses: appleboy/ssh-action@master
      env:
        IMAGE: ${{ steps.meta.outputs.tags }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        PORT: ${{ secrets.PORT }}
        DOMAIN: ${{ secrets.DOMAIN }}
        API_URL: ${{ secrets.API_URL }}
        MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
        MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
        COOKEY: ${{ secrets.COOKEY }}
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        envs: IMAGE,DATABASE_URL,POSTGRES_PASSWORD,PORT,DOMAIN,API_URL,MAIL_USERNAME,MAIL_PASSWORD,COOKEY
        script: |
          cd /srv/fofoprono/server
          echo ${{ secrets.GITHUB_TOKEN }}
          echo ${{ secrets.DOCKER_TOKEN }}
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> .env
          docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.DOCKER_TOKEN }}
