name: Build the development image and deploy to server

on:
  push:
    branches: [dev]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  pull-and-deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: development
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Copy docker-compose.yml to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: ./docker-compose.dev.yml
        target: /srv/fofoprono/dev/api

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Pull image and deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          export IMAGE="${{ steps.meta.outputs.tags }}"
          export DATABASE_URL="${{ secrets.DATABASE_URL }}"
          export POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
          export API_URL="${{ secrets.API_URL }}"
          export API_PORT="${{ secrets.API_PORT }}"
          export DOMAIN="${{ secrets.DOMAIN }}"
          export SMTP_HOST="${{ secrets.SMTP_HOST }}"
          export SMTP_USERNAME="${{ secrets.SMTP_USERNAME }}"
          export SMTP_PASSWORD="${{ secrets.SMTP_PASSWORD }}"
          export COOKEY="${{ secrets.COOKEY }}"
          printenv
          cd /srv/fofoprono/dev/api
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker-compose -f docker-compose.dev.yml pull
          docker-compose -f docker-compose.dev.yml up -d
